#!/bin/sh
# Helper script to generate Nginx HTTP vhost for RabbitMQ management UI
# It writes a simple HTTP server block for the web management interface
# SSL settings will be managed by Certbot
set -eu

# Required
if [ -z "${DOMAIN:-}" ]; then
  echo "ERROR: DOMAIN is required. Example: make nginx-config DOMAIN=queue.example.com" >&2
  exit 1
fi

# Defaults for management UI
BACKEND_HOST="${BACKEND_HOST:-127.0.0.1}"
MGMT_PORT="${MGMT_PORT:-15672}"
NGINX_CONFIG_NAME="${NGINX_CONFIG_NAME:-nginx-rabbitmq-${DOMAIN}.conf}"
NGINX_TEST="${NGINX_TEST:-nginx -t}"
NGINX_RELOAD="${NGINX_RELOAD:-nginx -s reload}"

# Custom AMQP port for clients (default to 5745 as in your example)
AMQP_PORT="${AMQP_PORT:-5745}"

# Directory setup
available_dir="${NGINX_AVAILABLE_DIR:-/etc/nginx/sites-available}"
enabled_dir="${NGINX_ENABLED_DIR:-/etc/nginx/sites-enabled}"

# Sanity check: directories must exist
if [ ! -d "$available_dir" ]; then
  echo "ERROR: sites-available dir not found: $available_dir" >&2
  exit 1
fi
if [ ! -d "$enabled_dir" ]; then
  echo "ERROR: sites-enabled dir not found: $enabled_dir" >&2
  exit 1
fi

cfg_path="${available_dir}/${NGINX_CONFIG_NAME}"
echo "Generating Nginx HTTP vhost config at: ${cfg_path}"

umask 022

# Write config for the management UI
cat > "${cfg_path}" <<EOF_CFG
# Auto-generated by Makefile (nginx-config)
# HTTP vhost for RabbitMQ management interface
# SSL settings will be managed by Certbot

server {
    server_name ${DOMAIN};

    # Management interface proxy
    location / {
        proxy_pass http://${BACKEND_HOST}:${MGMT_PORT};
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_set_header X-Forwarded-Host \$host;
        proxy_buffering off;
    }

    # Return empty response for Let's Encrypt validation
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
}
EOF_CFG

# Create/refresh symlink in sites-enabled
ln -sf "${cfg_path}" "${enabled_dir}/${NGINX_CONFIG_NAME}"
echo "Symlinked ${enabled_dir}/${NGINX_CONFIG_NAME} -> ${cfg_path}"

# Validate and reload Nginx
echo "Testing Nginx configuration..."
if ! sh -c "$NGINX_TEST"; then
  echo "ERROR: Nginx config test failed. Not reloading." >&2
  exit 1
fi

echo "Reloading Nginx..."
sh -c "$NGINX_RELOAD"

# Run Certbot to get SSL certificate if not already set up
need_cert=true

if [ -d "/etc/letsencrypt/live/${DOMAIN}" ]; then
  echo "Certificate for ${DOMAIN} already exists."
  need_cert=false
fi

# Run certbot if needed
if [ "$need_cert" = "true" ]; then
  echo "Getting SSL certificate for ${DOMAIN}..."
  if ! certbot --nginx -d "${DOMAIN}" --non-interactive --agree-tos --email "${EMAIL:-admin@example.com}"; then
    echo "WARNING: Failed to obtain certificate for ${DOMAIN}. You may need to run manually:" >&2
    echo "  sudo certbot --nginx -d ${DOMAIN}" >&2
  fi
fi

# Show configuration information
echo ""
echo "===================================================================="
echo "RabbitMQ Configuration Summary:"
echo "===================================================================="
echo "✅ Management UI: https://${DOMAIN}"
echo "✅ AMQP Port: ${AMQP_PORT} (public)"
echo ""
echo "Docker Compose port configuration:"
echo "  - \"127.0.0.1:15672:15672\"  # Management UI (localhost only)"
echo "  - \"${AMQP_PORT}:5672\"      # AMQP port (public)"
echo ""
echo "Client connection string:"
echo "  amqp://username:password@your-server-ip:${AMQP_PORT}/vhost"
echo "===================================================================="